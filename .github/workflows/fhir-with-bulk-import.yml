name: fhir-with-initial-import-v2

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  TEMP_DIR_PATH: './tmp'
  SYNTHEA_JAR_NAME: 'synthea-with-dependencies.jar'
  FHIR_ENDPT_DOMAIN: '.fhir.azurehealthcareapis.com'

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: read

jobs:

  # job1: deploy the ahds workspace with a fhir service
  deploy-fhir-infra:
    #if: ${{ false }} #disables the job
    runs-on: ubuntu-latest
    environment: sample
    outputs:
      suffix: ${{ steps.get-unique-names.outputs.suffix }}
      fhirWorkspaceName: ${{ steps.get-unique-names.outputs.fhirWorkspaceName }} 
      fhirName: ${{ steps.get-unique-names.outputs.fhirName }}
      import-storage-acct-name: ${{ steps.get-unique-names.outputs.storage-acct-name }} 
      bulk-import-blob-container-name: ${{ steps.get-unique-names.outputs.bulk-import-blob-container-name }} 
      
    steps:

      # checkout 
    - uses: actions/checkout@v3

      # log into Azure
    - name: az-login
      uses: Azure/login@v1.4.6
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
      # hash the resource group's ID so it's unique but also repeatable
      # steps: 
      # 1. retrieve the resouceGroup's id property
      # 2. hash the id and take the first 8 chars of the hash
      # 3. set the output using the hash substring
    - name: generate unique resource names 
      id: get-unique-names
      shell: bash
      run: |
        rsGroupId=$(az group list --query "[?name=='${{ secrets.AZURE_RG }}'].id" -o tsv)        
        suffix=$(echo -n $rsGroupId | shasum | cut -c1-8)

        echo "suffix=$suffix" >> $GITHUB_OUTPUT
        echo "fhirWorkspaceName=ws$suffix" >> $GITHUB_OUTPUT
        echo "fhirName=fhir$suffix" >> $GITHUB_OUTPUT
        echo "import-storage-acct-name=fhirimpsa$suffix" >> $GITHUB_OUTPUT
        echo "bulk-import-blob-container-name=importsrc" >> $GITHUB_OUTPUT
        
        unset rsGroupId
        unset suffix
        
      # deploy uisng bicep - deploys the fhir service and its storage account to perform bulk import
      # Important note: you cannot set the fhir service endpoint, it is automatically set by
      # resource based on the workspaceName and the fhirName with a format of
      # 'https://${workspaceName}-${fhirName}.fhir.azurehealthcareapis.com' 
      # @TODO: change fhir+Suffix to be unique within the AHDS workspace
    - name: deploy-fhir-infra
      uses: azure/arm-deploy@v1.0.9
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./bicep/ahds-fhir-with-bulk-import.bicep
        parameters: 'workspaceName=${{steps.get-unique-names.outputs.fhirWorkspaceName}}
        fhirName=${{steps.get-unique-names.outputs.fhirName}} 
        isImportEnabled=true isInitialImportMode=true 
        importStorageAcctName=${{steps.get-unique-names.outputs.import-storage-acct-name}}
        bulkImportBlobContainerName=${{steps.get-unique-names.outputs.bulk-import-blob-container-name}}
        azcopyServicePrincipalObjectId=$(az ad sp show --id "${{secrets.AZURE_CLIENT_ID}}" --query "id" -o tsv)'

  # job2: seed fhir service with synthea data 
  seed-with-synthea-data:
    #if: ${{ false }} #disables the job
    needs: [deploy-fhir-infra]
    runs-on: ubuntu-latest
    environment: sample

    steps:

      # checkout 
    - uses: actions/checkout@v3

      # log into Azure
    - name: az-login
      uses: Azure/login@v1.4.6
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
      # Install synthea and generate data
    - name: install-jdk
      uses: actions/setup-java@v3.8.0
      with:
        distribution: 'microsoft' 
        java-version: '17'
    
      # generate Synthea build import, i.e. ndjson dataset
    - name: install-and-run-synthea
      run: |
        java -version
        mkdir ${{ env.TEMP_DIR_PATH }}
        curl -L https://github.com/synthetichealth/synthea/releases/download/master-branch-latest/synthea-with-dependencies.jar --output ${{ env.TEMP_DIR_PATH }}/${{ env.SYNTHEA_JAR_NAME }}
        cd ${{ env.TEMP_DIR_PATH }}
        java -jar ${{ env.SYNTHEA_JAR_NAME }} -m "${{ secrets.SYNTHEA_MODULE_NAME }}" -p ${{ secrets.SYNTHEA_PATIENTS_NUM }} --exporter.fhir.bulk_data=true
        ls -l
    
      # azcopy synthea data to target storage account
    - name: azcopy-to-storage
      run: |
        ls -l
        cd ${{ env.TEMP_DIR_PATH }}
        wget -O azcopy_v10.tar.gz https://aka.ms/downloadazcopy-v10-linux && tar -xf azcopy_v10.tar.gz --strip-components=1
        ls -l
        azcopy login --service-principal --application-id ${{ secrets.AZURE_CLIENT_ID }} --tenant-id ${{ secrets.AZURE_TENANT_ID }}
        azcopy login status
        echo "STORAGEACCT: https://${{needs.deploy-fhir-infra.outputs.import-storage-acct-name}}.blob.core.windows.net/${{needs.deploy-fhir-infra.outputs.bulk-import-blob-container-name}}/"
        azcopy cp "./output/fhir/*.*" "https://${{needs.deploy-fhir-infra.outputs.import-storage-acct-name}}.blob.core.windows.net/${{needs.deploy-fhir-infra.outputs.bulk-import-blob-container-name}}/" --recursive=true
      env: 
        AZCOPY_SPA_CLIENT_SECRET: ${{ secrets.AZCOPY_SPA_CLIENT_SECRET }}

      # fire the fhir service $import endpoint
      # Just 'Patient.ndjson' for now
    - name: fire-import-endpoint
      run: |
        fhirUrl=https://${{needs.deploy-fhir-infra.outputs.fhirWorkspaceName}}-${{needs.deploy-fhir-infra.outputs.fhirName}}${{env.FHIR_ENDPT_DOMAIN}}
        echo $fhirUrl/'$import'
        importModeBody="{
          \"resourceType\": \"Parameters\",
          \"parameter\": [
            {\"name\":\"inputFormat\", \"valueString\":\"application/fhir+ndjson\"},
            {\"name\":\"mode\", \"valueString\":\"InitialLoad\"},
            {\"name\":\"input\",
                \"part\": [
                  {\"name\":\"type\", \"valueString\":\"Patient\"},
                  {\"name\":\"url\", \"valueUri\":\"https://${{needs.deploy-fhir-infra.outputs.import-storage-acct-name}}.blob.core.windows.net/${{needs.deploy-fhir-infra.outputs.bulk-import-blob-container-name}}/Patient.ndjson\"}
                ]
            },
          ]
        }"
        echo "importModeBody=$importModeBody"
        az logout
        az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZCOPY_SPA_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }} 
        token=$(az account get-access-token --resource=$fhirUrl --query accessToken --output tsv)
        response=$(curl -i -d "$importModeBody" -H "Prefer:respond-async" -H "Content-Type:application/fhir+json" -H "Authorization: Bearer $token" -X POST $fhirUrl/'$import')
        echo $response
        callbackUrl=$(echo $response | sed -n -e 's/^.*content-location: //p' | sed -e 's/\r$//')
        echo $callbackUrl
        curl -X GET $callbackUrl -H "Authorization: Bearer $token" | jq .

      # disable import on the fhir service / import related parameters defaults to false    
    - name: enable-fhir-importmode
      uses: azure/arm-deploy@v1.0.9
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./bicep/ahds-fhir.bicep
        parameters: 'workspaceName=${{needs.deploy-fhir-infra.outputs.fhirWorkspaceName}}
        fhirName=${{needs.deploy-fhir-infra.outputs.fhirName}}' 
